<?xml version="1.0" encoding="UTF-8"?>
<project name="BTrace" default="all" basedir=".">

  <!-- Property Definitions -->
    <target name="prepare" depends="load.properties">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${javadoc.dir}"/>
        <mkdir dir="${tests.dir}"/>
        <mkdir dir="${tests.result.dir}"/>
        <available classname="org.opensolaris.os.dtrace.Consumer"
        classpath="/usr/share/lib/java/dtrace.jar"
        property="libdtrace.jni.available"/>
        <path id="javac.classpath">
            <pathelement path="${lib.dir}/btrace-asm-4.0.jar" />
            <pathelement path="${java.home}/../lib/tools.jar" />
            <pathelement path="/usr/share/lib/java/dtrace.jar" />
        </path>
        <condition property="iswindows">
            <os family="windows"/>
        </condition>
        <condition property="btracec" value="btracec">
            <not>
                <istrue value="${iswindows}"/>
            </not>
        </condition>
        <condition property="btracec" value="btracec.bat">
            <istrue value="${iswindows}"/>
        </condition>
    </target>
    <target name="initialize.maven" depends="prepare">
       <get
          src="http://maven.glassfish.org/content/repositories/maven.central/org/apache/maven/maven-ant-tasks/2.1.1/maven-ant-tasks-2.1.1.jar"
          dest="${build.dir}/maven-ant-tasks-2.1.1.jar"
          verbose="true"
          usetimestamp="true"/>
       <path id="maven-ant-tasks.classpath" path="${build.dir}/maven-ant-tasks-2.0.9.jar" />
       <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
                classpathref="maven-ant-tasks.classpath" />
       <install-provider artifactId="wagon-svn" groupId="org.jvnet.wagon-svn" version="1.12">
          <remoteRepository id="java.net.maven2.repository" url="http://download.java.net/maven/2/" />
          <localRepository path="${maven.repo.local}"/>
       </install-provider>

   </target>
   <target name="create.pom.file" if="artifact">
       <copy file="btrace_template.pom" tofile="${build.dir}/pom-${artifact}.xml" overwrite="true">
           <filterset>
               <filter token="NAME" value="${name}"/>
               <filter token="ARTIFACT_ID" value="${artifact}"/>
               <filter token="VERSION" value="${release.version}"/>
               <filter token="REPOSITORY_ID" value="java.net-maven2-repository"/>
               <filter token="REPOSITORY_URL" value="java-net:/maven2-repository~svn/trunk/repository/"/>
           </filterset>
       </copy>
   </target>

   <target name="upload.maven.with.build" depends="initialize.maven,jar,upload.maven"/>

   <target name="create.poms" depends="initialize.maven">
       <antcall target="create.pom.file" >
          <param name="name" value="btrace-agent"/>
          <param name="artifact" value="btrace-agent"/>
       </antcall>
       <install file="${agent.jar}">
           <pom file="${build.dir}/pom-btrace-agent.xml"/>
           <localRepository path="${maven.repo.local}"/>
           <attach file="${agent-sources.jar}" type="jar" classifier="sources"/>
       </install>
       <antcall target="create.pom.file" >
          <param name="name" value="btrace-boot"/>
          <param name="artifact" value="btrace-boot"/>
       </antcall>
       <install file="${boot.jar}">
           <pom file="${build.dir}/pom-btrace-boot.xml"/>
           <localRepository path="${maven.repo.local}"/>
           <attach file="${boot-sources.jar}" type="jar" classifier="sources"/>
       </install>
       <antcall target="create.pom.file" >
          <param name="name" value="btrace-client"/>
          <param name="artifact" value="btrace-client"/>
       </antcall>
       <install file="${client.jar}">
           <pom file="${build.dir}/pom-btrace-client.xml"/>
           <localRepository path="${maven.repo.local}"/>
           <attach file="${client-sources.jar}" type="jar" classifier="sources"/>
       </install>
   </target>

   <target name="upload.maven" depends="create.poms" description="Publish btrace binaries to Maven2 repository">
       <deploy file="${agent.jar}" uniqueVersion="false" >
           <pom file="${build.dir}/pom-btrace-agent.xml"/>
           <localRepository path="${maven.repo.local}"/>
           <attach file="${agent-sources.jar}" type="jar" classifier="sources"/>
       </deploy>

       <deploy file="${boot.jar}" uniqueVersion="false" >
           <pom file="${build.dir}/pom-btrace-boot.xml"/>
           <localRepository path="${maven.repo.local}"/>
           <attach file="${boot-sources.jar}" type="jar" classifier="sources"/>
       </deploy>

       <deploy file="${client.jar}" uniqueVersion="false" >
           <pom file="${build.dir}/pom-btrace-client.xml"/>
           <localRepository path="${maven.repo.local}"/>
           <attach file="${client-sources.jar}" type="jar" classifier="sources"/>
       </deploy>

   </target> 

    <target name="clean" depends="load.properties">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
    <target name="clean-docs" depends="load.properties">
        <delete dir="${javadoc.dir}"/>
    </target>

    <target name="compile-src" depends="prepare" description="Compiles the sources">
        <javac srcdir="${share.src.dir}"
           destdir="${classes.dir}"
           debug="on" deprecation="on" includeantruntime="on" includejavaruntime="on">
            <classpath refid="javac.classpath" />
        </javac>
    </target>
    <target name="compile" depends="compile-src, compile-dtrace" description="Compiles the sources, resources and javadocs">
        <copy todir="${classes.dir}/com/sun/btrace/resources">
            <fileset dir="${share.src.dir}/com/sun/btrace/resources/"/>
        </copy>
        <copy todir="${classes.dir}/com/sun/btrace/runtime">
            <fileset file="${share.src.dir}/com/sun/btrace/runtime/jaxb.index"/>
        </copy>
        <copy todir="${classes.dir}/com/sun/btrace/annotations">
            <fileset file="${share.src.dir}/com/sun/btrace/annotations/jaxb.index"/>
        </copy>
    </target>
    <target name="javadoc" depends="jar,clean-docs" description="Generates javadocs">
        <javadoc destdir="${javadoc.dir}">
            <fileset file="${share.src.dir}/com/sun/btrace/aggregation/*.java"/>
            <fileset file="${share.src.dir}/com/sun/btrace/annotations/*.java"/>
            <fileset file="${share.src.dir}/com/sun/btrace/AnyType.java"/>
            <fileset file="${share.src.dir}/com/sun/btrace/BTraceUtils.java"/>
            <fileset file="${share.src.dir}/com/sun/btrace/Profiler.java"/>
            <fileset file="${share.src.dir}/com/sun/btrace/api/*.java"/>
            <fileset file="${share.src.dir}/com/sun/btrace/spi/*.java"/>
        </javadoc>
    </target>
    <target name="check-junit" depends="prepare">
        <available file="${junit.jar}" property="junit.jar.available"/>
        <fail message="${junit.jar} is not available. Please, make sure the file exists or set the junit.jar property accordingly.">
            <condition>
                <not>
                    <istrue value="${junit.jar.available}"/>
                </not>
            </condition>
        </fail>
    </target>
    <target name="prepare-tests" depends="compile-tests, build-traces"/>

    <target name="compile-tests" depends="check-junit, compile-src" description="Compiles the tests">
        <javac srcdir="${test.src.dir}" destdir="${tests.dir}" debug="on" deprecation="on">
            <classpath refid="javac.classpath"/>
            <classpath>
                <pathelement location="${tests.dir}"/>
                <pathelement location="${classes.dir}"/>
                <pathelement path="${junit.jar}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
                <fileset dir="${test.lib.dir}" includes="**/*.jar"/>
            </classpath>
            <exclude name="traces/**"/>
        </javac>
    </target>
    
    <target name="build-traces" depends="jar">
        <echo>executing ${bin.dir}/${btracec} -cp ${build.dir}/test -d ${tests.dir} ${traces.dir}/*.java</echo>
        <apply executable="${bin.dir}/${btracec}"  verbose="true">
            <fileset dir="${traces.dir}" includes="**/*.java"/>
            <arg value="-cp ${build.dir}/test"/>
            <arg value="-d ${tests.dir}"/>
        </apply>
    </target>

    <target name="compile-dtrace" if="libdtrace.jni.available" depends="prepare">
        <javac srcdir="${solaris.src.dir}"
           destdir="${classes.dir}"
           debug="on" deprecation="on">
            <classpath refid="javac.classpath"/>
        </javac>
    </target>
    <target name="jar" depends="compile" description="Creates deployment bundles">
        <unjar src="${lib.dir}/btrace-asm-4.0.jar" dest="${classes.dir}"/>
        <jar jarfile="${agent.jar}"         
         basedir="${classes.dir}"
         manifest="${share.src.dir}/META-INF/agent-manifest.mf"
         excludes="**/dtrace/* **/btrace/*.class **/aggregation/* **/annotations/* **/compiler/* **/client/* **/comm/* **/api/**/* **/spi/**/*"/>
        <jar jarfile="${agent-sources.jar}"         
         basedir="${share.src.dir}"
         excludes="**/dtrace/* **/btrace/*.class **/aggregation/* **/annotations/* **/compiler/* **/client/* **/comm/* **/api/**/* **/spi/**/* **/META-INF/*"/>
        <jar jarfile="${boot.jar}"         
         basedir="${classes.dir}"
         excludes="**/dtrace/* **/agent/* **/compiler/* **/client/* **/resources/* **/runtime/* **/util/* **/asm/** **/api/**/* **/spi/**/*"/>
        <jar jarfile="${boot-sources.jar}"         
         basedir="${share.src.dir}"
         excludes="**/dtrace/* **/agent/* **/compiler/* **/client/* **/resources/* **/runtime/* **/util/* **/asm/** **/api/**/* **/spi/**/* **/META-INF/*"/>
        <jar jarfile="${client.jar}"
         basedir="${classes.dir}"
         manifest="${share.src.dir}/META-INF/client-manifest.mf"
         excludes="**/runtime/* **/agent/*"/>
        <jar jarfile="${client-sources.jar}"
         basedir="${share.src.dir}"
         excludes="**/runtime/* **/agent/* **/META-INF/*"/>
    </target>
    <target name="load.properties">
        <echo message="Loading build properties file"/>
        <property file="build.properties"/>
    </target>
    <target name="dist" depends="jar, test-dist">
        <delete dir="vi${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/build"/>
        <mkdir dir="${dist.dir}/bin"/>
        <mkdir dir="${dist.dir}/samples"/>
        <mkdir dir="${dist.dir}/docs"/>
        <copy todir="${dist.dir}/build">
            <fileset file="${build.dir}/*.jar"/>
        </copy>
        <copy todir="${dist.dir}/bin">
            <fileset file="${bin.dir}/*"/>
        </copy>
        <copy todir="${dist.dir}/samples">
            <fileset file="${samples.dir}/*"/>
        </copy>
        <copy todir="${dist.dir}/docs">
            <fileset file="${docs.dir}/usersguide.html"/>
        </copy>
        <copy todir="${dist.dir}/docs/javadoc">
            <fileset dir="${docs.dir}/javadoc"/>
        </copy>
        <copy todir="${dist.dir}">
            <fileset file="${basedir}/../*.txt"/>
            <fileset file="${basedir}/../COPYRIGHT"/>
        </copy>
        <tar basedir="${dist.dir}" destfile="${dist.dir}/btrace-bin.tar.gz" 
             compression="gzip" excludes="*.zip,*.gz"/>
        <zip basedir="${dist.dir}" destfile="${dist.dir}/btrace-bin.zip"
             excludes="*.zip,*.gz"/>
    </target>
    <target name="test" depends="check-junit, compile, compile-tests">
        <junit fork="yes" printsummary="withOutAndErr" showoutput="true" errorProperty="test.failed" failureProperty="test.failed" filtertrace="false">
            <formatter type="xml"/>
            <formatter usefile="false" type="brief" />
            <classpath>
                <pathelement location="${tests.dir}"/>
                <pathelement location="${classes.dir}"/>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${junit.jar}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
                <fileset dir="${test.lib.dir}" includes="**/*.jar"/>
            </classpath>

            <batchtest haltonfailure="true" todir="${tests.result.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*.java"/>
                    <exclude name="resources/**"/>
                    <exclude name="traces/**"/>
                    <exclude name="support/**"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="test-dist" depends="build-traces, test"/>
    <target name="all" depends="jar, javadoc" description="Builds sources and deployment jars"/>
</project>

